.CHARSET 1251
;Демонстрационная программа для продпрограммы разбора сообщения GGA NMEA-0183
;Начинается со страницы 0, занимает 4 страницы
;Рабочие подпрограммы находятся в страницах 1 и 2
;В странице 1 находится подпрограмма разбора сообщения GGA и нужные ей подпрограммы извлечения и записи данных в регистры памяти
;В странице 2 находятся подпрограммы разбора элементов сообщения, могущие иметь самостоятельное значение
;В странице 3 находится текст примера сообщения $GPGGA
;В странице 0 находится демонстрационная программа с примером настройки и вызова подпрограммы разбора сообщения GGA.

;В страницах 1 и 2 занято немногим более 50 байтов в каждой, 
; поэтому за счёт отказа от разбора нескольких параметров сообщения, 
; можно уменьшить длину подпрограммы разбора сообщения GGA и уместить все подпрограммы на одной странице.

.ORG 0
	CX
	;Настройка регистров для работы с универсальным байтовым буфером
	9031 M E
	9034 M D
	;Для настройки работы с буфером приёма нужно соотвественно
	;9085 M E
	;9087 M D
	
	GSB PREPARE		; Подготовка данных в универсальном байтовом буфере
	
	;Настройка и вызов подпрограммы распознавания
	0 K M E			; Индексный регистр, запись 0 - выбрать первый байт
	15 M 4			; Начать запись с 16 регистра
	P GSB PARSEGGA	; Вызов подпрограммы распознавания
	R/S

;Подпрограмма переноса в универсальный байтовый буффер 0-терминированной строки из памяти программ, начиная с индекса 300,
;используется для подготовки тестового примера
;требует RE = 9031, RD = 9034

PREPARE:
	0 K M E
	300
LOOP:
	ENT
	K PRGM
	F X!=0 ENDLOOP
	K M D
	F R
	1 +
	GOTO LOOP
ENDLOOP:
	RTN
	
.PAGE
PARSEGGA:
;Для работы нужно занести в
; R4 - номер регистра, предшестукющий первому регистру выходных данных (куда будет записан Timestamp)
; RE - индексный регистр буфера-источника (для буфера приёма - 9085, для универсального байтового буфера - 9031)
; RD - регистр чтения из источника с постинкрементом индекса (для буфера приёма - 9087, для универсального байтового буфера - 9034)
; Записать в индексный регистр (K M E) позицию начала распознаваемой строки

; После работы в регистрах начиная с номера R4+1, последовательно будут записаны данные:
; (Timestamp) в часах, 
; (Lat) в градусах, положительное для северного направления и отрицательное для южного,
; (Long) в градусах, положительное для восточного направления и отрицательное для западного,
; (GPSQual) - флаг фиксации позиции
; (Sats) - количество используемых спутников
; (HDOP) - горизонтальная ошибка, как есть
; (Alt) - высота над уровнем моря, как есть
; (GEOSep) - высота геоида над эллипсоидом WGS 84, как есть
;предполагается, что высоты переданы в метрах, единица измерения не парсится
; параметры [DGPSAge],[DGPSRef],(checksum) не прасятся

; Подрограмма использует для работы R0, R1 и R4, значения в RE и RD не меняются
; После окончания работы, индексный регистр указывает на знак, следующий за знаком возврата каретки

;Парсинг $GPGGA
;$GPGGA,(Timestamp),(Lat),(N/S),(Long),(E/W),(GPSQual),(Sats),(HDOP),(Alt),(AltVal),(GEOSep),(GEOVal),[DGPSAge],[DGPSRef]*(checksum),(cr),(lf)
;$GPGGA,hhmmss.sss,ddmm.mmmm,N,dddmm.mmmm,W,x,xx,x.x,x.x,M,x.x,M,,0000*18
;Примеры
;$GPGGA,161229.487,3723.2475,N,12158.3416,W,1,07,1.0,9.0,M,,,,0000*18
;$GPGGA,114949.000,6001.28756,N,03019.29228,E,1,18,0.6,040.27,M,18.0,M,,,*6A

	GSB SKIP		;$GPGGA
	P GSB VALUE		;hhmmss.sss – время UTC
	EE 4 +/-		;hh.mmsssss – время UTC
	K MS->D			;Преобразуем в часы и доли часа
	K M 4
	GSB WRITEGEO	;широта
	GSB WRITEGEO	;долгота
	GSB WRITEVALUE	;флаг фиксации позиции
	GSB WRITEVALUE	;количество спутников
	GSB WRITEVALUE	;Horizontal Dilution of Precision
	GSB WRITEVALUE	;высота над уровнем моря
	GSB SKIP		;M единица измерения (метр)
	GSB WRITEVALUE	;высота геоида над эллипсоидом WGS 84
	GSB SKIPALL		;пропустить до конца
	RTN
	
WRITEVALUE:
	P GSB VALUE
	K M 4
	RTN
WRITEGEO:
	P GSB GEO
	K M 4
	RTN
SKIP:
	K RM D		; Считать очередной байт из пакета	
	44 -		; ','
	F X=0 SKIP
	RTN
	
SKIPALL:
	K RM D		; Считать очередной байт из пакета	
	13 -		; 13 =  - конец пакета
	F X=0 SKIPALL
	RTN
	
.PAGE

;Подпрограмма парсинга десятичного числа из буфера
;Индексный регистр должен указывать на первую цифру числа
;при работе будут обойдены все числа и запятая после него, а индексный регистр станет указывать на первый знак следующего параметра
;после окончания работы число будет записано в R0, это же значение будет в регистре X стека
;подпрограмма использует для работы R0 и R1, а также портит стек.
VALUE:
	CX
	M0
	1
	+/-	
	M1
F0:
	K RM D		; Считать очередной байт из пакета	
	46 -
	F X>=0 ENDVALUE	; 44 ',' 13 LR
	F X!=0 POINT
	2 -			; 46+2=48 '0'
	;Прибавить к П0 и умножить на 10
	RM 0
	+		
	10 *
	M 0
	GOTO F0
POINT:
	K RM E
	M 1		;Перекладываем 9085 в 2
	GOTO F0
ENDVALUE: 
	RM 1
	F X>=0 MVALUE
	K RM E
	-
MVALUE:
	F 10^X
	RM 0
	*
	M0
	RTN

;Подпрограмма для использования внутри GEO, не влияет на регистры, не портит стек, результат кладёт в X
NSEW:
	K RM D		; Считать очередной байт из пакета	
	81 -		; 'N'<'Q'<'S', 'E'<'Q'<'W'
	K SGN		; 'N'->-1, 'S'->1, 'E'->-1, 'W'->1
	+/-			; А надо - наоборот, чтобы север и восток были положительным направлением.
	K RM D		; Пропустить очередной байт из пакета, там ожидается запятая
	F R			; Вытряхнуть запятую из стека
	RTN
	
;Подпрограмма парсинга пары параметров - (value),(N/S/E/W), 
; value должно иметь формат ddmm.m или dddmm.m (стандартный для GGA)
;Индексный регистр должен указывать на первую цифру параметра value, 
;при работе будут обойдены все знаки обоих параметров и запятая после них, а индексный регистр станет указывать на первый знае следующего параметра
;после окончания работы записывает в R0 значение географической координаты в формате (+/-)dd.ddddd (формат Г ЭКВМ), это же значение будет в регистре X стека
;подпрограмма использует для работы R0 и R1, а также портит стек.
GEO:
	GSB VALUE	;ddmm.mmmm
	EE 2 +/-	;dd.mmmmmm
	K M->D		;градусы dd.ddddd
	GSB NSEW
	*
	M 0
	RTN
	
.ORG 300
.TEXT "$GPGGA,114949.000,6001.28756,N,03019.29228,E,1,18,0.6,040.27,M,18.0,M,,,*6A\r\n\0"
.ENDP